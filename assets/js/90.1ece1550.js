(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{715:function(t,a,s){"use strict";s.r(a);var n=s(20),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[s("code",[t._v("Java")]),t._v(" 集合可分为"),s("code",[t._v("Collection")]),t._v(" 和"),s("code",[t._v("Map")]),t._v(" 两种体系:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Collection")]),t._v("接口：单列数据，定义了存取一组对象的方法的集合\n"),s("ul",[s("li",[s("code",[t._v("List")]),t._v("：元素有序、可重复的集合\n"),s("ul",[s("li",[s("code",[t._v("ArrayList")]),t._v("、"),s("code",[t._v("LinkedList")]),t._v("、"),s("code",[t._v("Vector")])])])]),t._v(" "),s("li",[s("code",[t._v("Set")]),t._v("：元素无序、不可重复的集合\n"),s("ul",[s("li",[s("code",[t._v("HashSet")]),t._v("、"),s("code",[t._v("LinkedHashSet")]),t._v("、"),s("code",[t._v("TreeSet")])])])])])]),t._v(" "),s("li",[s("code",[t._v("Map")]),t._v("接口：双列数据，保存具有映射关系“"),s("code",[t._v("key-value对")]),t._v("”的集合，也称为"),s("strong",[t._v("键值对")]),t._v("。\n"),s("ul",[s("li",[s("code",[t._v("HashMap")]),t._v("、"),s("code",[t._v("LinkedHashMap")]),t._v("、"),s("code",[t._v("TreeMap")]),t._v("、"),s("code",[t._v("Hashtable")]),t._v("、"),s("code",[t._v("Properties")])])])])]),t._v(" "),s("p",[s("strong",[t._v("前面我们已经学完"),s("code",[t._v("Collection")]),t._v(" 体系，接下来学习"),s("code",[t._v("Map")]),t._v("体系。")])]),t._v(" "),s("h2",{attrs:{id:"map接口继承树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map接口继承树"}},[t._v("#")]),t._v(" Map接口继承树")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/SaulJWu/images/main/20201226222436.png",alt:"image-20201226222436325"}})]),t._v(" "),s("p",[t._v("从图中，得知"),s("code",[t._v("SortedMap")]),t._v("和"),s("code",[t._v("TreeMap")]),t._v("是有序的。")]),t._v(" "),s("p",[t._v("除了SortedMap是接口，其他都是实现类。")]),t._v(" "),s("h2",{attrs:{id:"map接口概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map接口概述"}},[t._v("#")]),t._v(" Map接口概述")]),t._v(" "),s("ul",[s("li",[t._v("Map与Collection并列存在。用于保存具有"),s("strong",[t._v("映射关系")]),t._v("的数据:key-value，所以也叫键值对结构。")]),t._v(" "),s("li",[t._v("Map 中的key 和value 都可以是任何引用类型的数据")]),t._v(" "),s("li",[t._v("Map 中的"),s("strong",[t._v("key 用Set来存放，不允许重复")]),t._v("，即同一个Map 对象所对应的类，须重写hashCode()和equals()方法")]),t._v(" "),s("li",[t._v("常用String类作为Map的“键”")]),t._v(" "),s("li",[t._v("key 和value 之间存在单向一对一关系，即通过指定的key 总能找到唯一的、确定的value")]),t._v(" "),s("li",[t._v("Map接口的常用实现类：HashMap、TreeMap、LinkedHashMap和Properties。其中，"),s("strong",[s("code",[t._v("HashMap")]),t._v("是Map 接口使用频率最高的实现类")])])]),t._v(" "),s("h2",{attrs:{id:"结构图示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构图示例"}},[t._v("#")]),t._v(" 结构图示例")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/SaulJWu/images/main/20201226222802.png",alt:"image-20201226222802026"}})]),t._v(" "),s("h2",{attrs:{id:"常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用方法"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),s("p",[s("strong",[t._v("添加、删除、修改操作：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Object put(Object key,Object value)")]),t._v("：将指定key-value添加到(或修改)当前map对象中")]),t._v(" "),s("li",[s("code",[t._v("void putAll(Map m)")]),t._v(": 将m中的所有key-value对存放到当前map中")]),t._v(" "),s("li",[s("code",[t._v("Object remove(Object key)")]),t._v("：移除指定key的key-value对，并返回value")]),t._v(" "),s("li",[s("code",[t._v("void clear()")]),t._v("：清空当前map中的所有数据")])]),t._v(" "),s("p",[s("strong",[t._v("元素查询的操作：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Object get(Object key)")]),t._v("：获取指定key对应的value")]),t._v(" "),s("li",[s("code",[t._v("boolean containsKey(Object key)")]),t._v("：是否包含指定的key")]),t._v(" "),s("li",[s("code",[t._v("boolean containsValue(Object value)")]),t._v("：是否包含指定的value")]),t._v(" "),s("li",[s("code",[t._v("int size()")]),t._v("：返回map中key-value对的个数")]),t._v(" "),s("li",[s("code",[t._v("boolean isEmpty()")]),t._v("：判断当前map是否为空")]),t._v(" "),s("li",[s("code",[t._v("boolean equals(Object obj)")]),t._v("：判断当前map和参数对象obj是否相等")])]),t._v(" "),s("p",[s("strong",[t._v("元视图操作的方法：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Set keySet()")]),t._v("：返回所有key构成的Set集合")]),t._v(" "),s("li",[s("code",[t._v("Collection values()")]),t._v("：返回所有value构成的Collection集合")]),t._v(" "),s("li",[s("code",[t._v("Set entrySet()")]),t._v("：返回所有key-value对构成的Set集合")])]),t._v(" "),s("h2",{attrs:{id:"练习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#练习"}},[t._v("#")]),t._v(" 练习")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"map中所有的key："')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//HashSet")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),t._v(" keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("keySet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"map中所有的value："')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collection")]),t._v(" values "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"map所有的映射关系："')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),t._v(" mappings "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("entrySet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" mapping "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" mappings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Entry")]),t._v(" entry "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Entry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" mapping"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key是："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('",value是："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br")])]),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("Map：双列数据，存储key-value对的数据")]),t._v(" "),s("ul",[s("li",[t._v("HashMap：作为Map的主要实现类；线程不全的，效率高；存储null的key和value。"),s("strong",[t._v("JDK7即之前底层是数组+链表，JDK8及以上底层是数组+链表+红黑树。")]),t._v(" "),s("ul",[s("li",[t._v("LinkedHashMap：保证在遍历map元素时，添加了一对指针，指向前一个元素和后一个元素。对于频繁的遍历操作，执行效率要高于HashMap。")])])]),t._v(" "),s("li",[t._v("TreeMap：保证按照添加的key-value对进行排序，实现排序遍历。此时考虑key的自然排序或定制排序。底层使用红黑树结构。")]),t._v(" "),s("li",[t._v("Hashtable：作为古老的实现类；线程安全的，效率低；不能存储null的key和value。\n"),s("ul",[s("li",[t._v("Properties：常用来处理配置文件。key和value都是String类型。")])])])]),t._v(" "),s("p",[s("strong",[t._v("面试题或等下我们要学习的内容：")])]),t._v(" "),s("ul",[s("li",[t._v("1、HashMap的底层实现原理？")]),t._v(" "),s("li",[t._v("2、HashMap和hashtable的异同？")]),t._v(" "),s("li",[t._v("3、Currenthashmap与Hashtable异同？（暂时不讲）")])])])}),[],!1,null,null,null);a.default=e.exports}}]);