(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{699:function(t,v,a){"use strict";a.r(v);var _=a(20),e=Object(_.a)({},(function(){var t=this,v=t.$createElement,a=t._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"由来"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#由来"}},[t._v("#")]),t._v(" 由来")]),t._v(" "),a("p",[t._v("集合、数组都是对多个数据进行存储操作的结构，简称Java容器。")]),t._v(" "),a("ul",[a("li",[t._v("说明，此时的存储，主要指的是"),a("strong",[t._v("内存层面")]),t._v("的存储，不涉及持久化的存储。\n"),a("ul",[a("li",[t._v("持久化是指保存到硬盘或者数据库中。")])])])]),t._v(" "),a("p",[t._v("一方面，面向对象语言对事物的体现都是以对象的形式，为了方便对多个对象的操作，就要对对象进行存储。")]),t._v(" "),a("p",[t._v("另一方面，使用Array存储对象方面具有一些弊端，")]),t._v(" "),a("p",[t._v("而Java 集合就像一种容器，可以"),a("strong",[t._v("动态地")]),t._v("把多个对象的引用放入容器中")]),t._v(" "),a("p",[a("strong",[t._v("数组在内存存储方面的特点：")])]),t._v(" "),a("ul",[a("li",[t._v("数组初始化以后，长度就确定了。")]),t._v(" "),a("li",[t._v("数组声明的类型，就决定了进行元素初始化时的类型")])]),t._v(" "),a("p",[a("strong",[t._v("数组在存储数据方面的弊端：")])]),t._v(" "),a("ul",[a("li",[t._v("数组初始化以后，长度就不可变了，不便于扩展")]),t._v(" "),a("li",[t._v("数组中提供的属性和方法少，不便于进行添加、删除、插入等操作，且效率不高。同时无法直接获取存储元素的个数")]),t._v(" "),a("li",[t._v("数组存储的数据是有序的、可以重复的。----\x3e存储数据的特点单一")])]),t._v(" "),a("p",[a("strong",[t._v("Java 集合类可以用于存储数量不等的多个对象，还可用于保存具有映射关系的关联数组。")])]),t._v(" "),a("h2",{attrs:{id:"集合的使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合的使用场景"}},[t._v("#")]),t._v(" 集合的使用场景")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/SaulJWu/images/main/20201224015939.png",alt:"image-20201224015939621"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/SaulJWu/images/main/20201224015958.png",alt:"image-20201224015957971"}})]),t._v(" "),a("h2",{attrs:{id:"体系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#体系"}},[t._v("#")]),t._v(" 体系")]),t._v(" "),a("p",[a("code",[t._v("Java")]),t._v(" 集合可分为"),a("code",[t._v("Collection")]),t._v(" 和"),a("code",[t._v("Map")]),t._v(" 两种体系:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Collection")]),t._v("接口：单列数据，定义了存取一组对象的方法的集合\n"),a("ul",[a("li",[a("code",[t._v("List")]),t._v("：元素有序、可重复的集合\n"),a("ul",[a("li",[a("code",[t._v("ArrayList")]),t._v("、"),a("code",[t._v("LinkedList")]),t._v("、"),a("code",[t._v("Vector")])])])]),t._v(" "),a("li",[a("code",[t._v("Set")]),t._v("：元素无序、不可重复的集合\n"),a("ul",[a("li",[a("code",[t._v("HashSet")]),t._v("、"),a("code",[t._v("LinkedHashSet")]),t._v("、"),a("code",[t._v("TreeSet")])])])])])]),t._v(" "),a("li",[a("code",[t._v("Map")]),t._v("接口：双列数据，保存具有映射关系“"),a("code",[t._v("key-value对")]),t._v("”的集合，也称为"),a("strong",[t._v("键值对")]),t._v("。\n"),a("ul",[a("li",[a("code",[t._v("HashMap")]),t._v("、"),a("code",[t._v("LinkedHashMap")]),t._v("、"),a("code",[t._v("TreeMap")]),t._v("、"),a("code",[t._v("Hashtable")]),t._v("、"),a("code",[t._v("Properties")])])])])]),t._v(" "),a("h2",{attrs:{id:"collection接口继承树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#collection接口继承树"}},[t._v("#")]),t._v(" "),a("code",[t._v("Collection")]),t._v("接口继承树")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/SaulJWu/images/main/20201224020151.png",alt:"image-20201224020150884"}})]),t._v(" "),a("h2",{attrs:{id:"map接口继承树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map接口继承树"}},[t._v("#")]),t._v(" "),a("code",[t._v("Map")]),t._v("接口继承树")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/SaulJWu/images/main/20201224020243.png",alt:"image-20201224020243332"}})])])}),[],!1,null,null,null);v.default=e.exports}}]);